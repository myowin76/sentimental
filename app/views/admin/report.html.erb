<header>
  <h1><span style="color:#b42626">Client</span> Sentiment Pulse Report</h1>
  <p>Pick the date range you want to examine the sentiment pulse for and then optionally filter the data on campaign name, target word and use the sentiment value slider to set the maximum sentiment value.</p>
</header>

<div class="filter row">
	<%= form_tag admin_report_path, :method => 'get' do %>
    <div class="col-sm-2">
      <%= text_field_tag :date_from, params[:date_from], id: 'date_from', placeholder: 'Date From', class: 'form-control datepicker-input' %>
      
    </div>
    <div class="col-sm-2">
      <%= text_field_tag :date_to, params[:date_to], id: 'date_to', placeholder: 'Date To', class: 'form-control datepicker-input' %>
    </div>
    <div class="col-sm-3">
    	
      <% if params[:survey].present?   %>
        <%= select_tag "survey", options_from_collection_for_select(@surveys, "id", "name", params[:survey]), class: 'form-control' %>
        <%#= collection_select(:survey, :survey_id, @surveys, :id, :name, 
          {:selected => params[:survey_id], :include_blank => 'All Surveys'}, {class: 'form-control'}) %>

        <%#= select_tag "credit_card", options_for_select([ "VISA", "MasterCard" ], "MasterCard") %>
      <% else %>
        <%= select_tag "survey", options_from_collection_for_select(@surveys, "id", "name"), class: 'form-control' %>
        <%#= collection_select(:survey, :survey_id, @surveys, :id, :name, { prompt: 'All Surveys'}, {class: 'form-control'})  %>
        <%#= select("survey", "survey_id", @surveys.collect {|p| [ p.name, p.id ] }, {:prompt => 'All Surveys'}, {class: 'form-control'}) %>
      <% end %>  
    </div>
    <div class="col-sm-3">
      <%= text_field_tag :search, params[:search], placeholder: 'Target word', class: 'form-control' %>
    </div>
    <div class="col-sm-2">
      <%= submit_tag "Update", :name => nil, class: 'btn btn-default' %>
    </div>
  <% end %>
	
</div>
<div>
  <% unless @survey.nil? %>
    <% @client_surveys.each do |cs| %>
      <%= cs.text %> | <%= cs.created_at.strftime('%d %h %Y') %> | <%= cs.score %><br>
    <% end %>  
  <% end %>
</div>

<div class="row">
  <div id="chartdiv" style="min-width: 310px; height: 500px; margin: 0 auto"></div>
</div>

<%= render 'partials/socials'%>
<br><br><br>

<% content_for :scripts do %>
  
  <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
  <script type="text/javascript" src="https://www.amcharts.com/lib/3/amcharts.js"></script>
  <script type="text/javascript" src="https://www.amcharts.com/lib/3/serial.js"></script>
  <script type="text/javascript" src="https://www.amcharts.com/lib/3/themes/none.js"></script>
                     
  <script type="text/javascript">
  
  $(function () {
      $( "#date_from" ).datepicker({
        defaultDate: "+1w",
        changeMonth: true,
        dateFormat: 'dd/mm/yy',
        onClose: function( selectedDate ) {
          $( "#date_to" ).datepicker( "option", "minDate", selectedDate );
        }
      });
      $( "#date_to" ).datepicker({
        defaultDate: "+1w",
        changeMonth: true,
        dateFormat: 'dd/mm/yy',
        onClose: function( selectedDate ) {
          $( "#date_from" ).datepicker( "option", "maxDate", selectedDate );
        }
      });


    // var chart = AmCharts.makeChart("chartdiv", {
    //   "type": "serial",
    //   "theme": "none",
    //   "marginLeft": 20,
    //   "pathToImages": "http://www.amcharts.com/lib/3/images/",
    //   "dataProvider": [
    //     <% @client_surveys.order(:created_at).each do |cs| %>
    //     {
    //       "year" : <%= cs.created_at.strftime('%Y') %>,
    //       "text" : "<%= cs.text %>",
    //       "value" : <%= cs.score %>
    //     },
    //     <% end %>
    //   ],
    //   // [{
    //   //     "year": "1950",
    //   //     "value": 3
    //   // }],
    //   "valueAxes": [{
    //       "min": 0,
    //       "axisAlpha": 0,
    //       "inside": true,
    //       "position": "left",
    //       "ignoreAxisWidth": true,

    //   }],
    //   "graphs": [{
    //       "balloonText": "<b><span style='font-size:14px;'>[[text]]<br>[[category]]<br>Score:[[value]]</span></b>",
    //       "bullet": "round",
    //       "bulletSize": 6,
    //       "lineColor": "#637bb6",
    //       "negativeBase" : 5,
    //       "lineThickness": 1,
    //       "negativeLineColor": "#d1655d",
    //       "type": "smoothedLine",
    //       "valueField": "value"
    //   }],
    //   "chartScrollbar": {},
    //   "chartCursor": {
    //       "categoryBalloonDateFormat": "YYYY",
    //       "cursorAlpha": 0,
    //       "cursorPosition": "mouse"
    //   },
    //   "dataDateFormat": "YYYY",
    //   "categoryField": "year",
    //   "categoryAxis": {
    //       "minPeriod": "YYYY",
    //       "parseDates": true,
    //       "minorGridAlpha": 0.1,
    //       "minorGridEnabled": true
    //   }
    // });
var chartData = generatechartData();

function generatechartData() {
    var chartData = [];
    var firstDate = new Date();
    firstDate.setDate(firstDate.getDate() - 150);

    for (var i = 0; i < 150; i++) {
        // we create date objects here. In your data, you can have date strings
        // and then set format of your dates using chart.dataDateFormat property,
        // however when possible, use date objects, as this will speed up chart rendering.
        var newDate = new Date(firstDate);
        newDate.setDate(newDate.getDate() + i);

        var visits = Math.round(Math.random() * 10);

        chartData.push({
            date: newDate,
            visits: visits
        });
    }
        // <%# @client_surveys.order(:created_at).each do |cs| %>
        //   var newDate = new Date(firstDate);
        //   newDate.setDate(<%#= cs.created_at. %>.getDate() + i);

        //     chartData.push({
        //       "date" : newDate,
        //       "visits" : <%#= cs.score %>
        //     });
        // <%# end %>
    return chartData;
}


var chart = AmCharts.makeChart("chartdiv", {
    "theme": "light",
    "type": "serial",
    "marginRight": 80,
    "autoMarginOffset": 20,    
    "marginTop":20,
    "path": "http://www.amcharts.com/lib/3/",
    "dataProvider": chartData,
    "valueAxes": [{
        "id": "v1",
        "axisAlpha": 0.1
    }],
    "graphs": [{
        "useNegativeColorIfDown": true,
        "balloonText": "[[category]]<br><b>value: [[value]]</b>",
        "bullet": "round",
        "bulletBorderAlpha": 1,
        "bulletBorderColor": "#FFFFFF",
        "hideBulletsCount": 50,
        "lineThickness": 1,
        "lineColor": "#fdd400",
        "negativeLineColor": "#67b7dc",
        "valueField": "visits"
    }],
    "chartScrollbar": {
        "scrollbarHeight": 5,
        "backgroundAlpha": 0.1,
        "backgroundColor": "#868686",
        "selectedBackgroundColor": "#67b7dc",
        "selectedBackgroundAlpha": 1
    },
    "chartCursor": {
        "valueLineEnabled": false,
        "valueLineBalloonEnabled": true
    },
    "categoryField": "date",
    "categoryAxis": {
        "parseDates": true,
        "axisAlpha": 0,
        "minHorizontalGap": 60
    },
    "export": {
        "enabled": true
    }
});

chart.addListener("dataUpdated", zoomChart);
//zoomChart();

function zoomChart() {
    if (chart.zoomToIndexes) {
        chart.zoomToIndexes(130, chartData.length - 1);
    }
}
  });
  </script>	

<% end %>